{"ast":null,"code":"import _slicedToArray from\"/Users/kuluhanbinici/Documents/kuluhan.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import ReactDOM from'react-dom';import'./index.css';import App from'./App';import reportWebVitals from'./reportWebVitals';/*\nclass MyMenu2 extends React.Component {\n  constructor() {\n      this.addActiveClass= this.addActiveClass.bind(this);\n      this.state = {\n          active: false,\n      };\n  }\n  toggleClass() {\n      const currentState = this.state.active;\n      this.setState({ active: !currentState });\n  };\n\n  render() {\n      return (\n        <div className={this.state.active ? 'topnav':'topnav responsive'}>\n          <a href=\"#home\" class=\"active\">Home</a>\n          <a href=\"#publications\">Publications</a>\n          <a href=\"#CV\">CV</a>\n          <a href=\"#\" style={test} class=\"icon\" onClick={this.toggleClass}>&#9776;</a>\n        </div>\n      )\n  }\n}\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function MyMenu(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isActive=_useState2[0],setActive=_useState2[1];var toggleClass=function toggleClass(){setActive(!isActive);};return/*#__PURE__*/_jsxs(\"div\",{className:isActive?'topnav responsive':'topnav',children:[\" \",/*#__PURE__*/_jsx(\"a\",{href:\"#home\",class:\"active\",children:\"Home\"}),/*#__PURE__*/_jsx(\"a\",{href:\"#publications\",children:\"Publications\"}),/*#__PURE__*/_jsx(\"a\",{href:\"#CV\",children:\"CV\"}),/*#__PURE__*/_jsx(\"a\",{href:\"#\",style:test,class:\"icon\",onClick:toggleClass,children:\"\\u2630\"})]});}ReactDOM.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(App,{})}),document.getElementById('root'));ReactDOM.render(/*#__PURE__*/_jsx(MyMenu,{}),document.getElementById('mynav'));/*\nconst aboutSection = (\n  <h2>About</h2>\n);\n\n\nReactDOM.render(aboutSection, document.getElementsByClassName('section')[0]);\n*/ // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"sources":["/Users/kuluhanbinici/Documents/kuluhan.github.io/src/index.js"],"names":["React","useState","ReactDOM","App","reportWebVitals","MyMenu","isActive","setActive","toggleClass","test","render","document","getElementById"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E,wFAEA,QAASC,CAAAA,MAAT,EAAkB,CAChB,cAA8BJ,QAAQ,CAAC,KAAD,CAAtC,wCAAOK,QAAP,eAAiBC,SAAjB,eAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBD,SAAS,CAAC,CAACD,QAAF,CAAT,CACD,CAFD,CAIA,mBACE,aACE,SAAS,CAAEA,QAAQ,CAAG,mBAAH,CAAuB,QAD5C,4BAEE,UAAG,IAAI,CAAC,OAAR,CAAgB,KAAK,CAAC,QAAtB,kBAFF,cAGE,UAAG,IAAI,CAAC,eAAR,0BAHF,cAIE,UAAG,IAAI,CAAC,KAAR,gBAJF,cAKE,UAAG,IAAI,CAAC,GAAR,CAAY,KAAK,CAAEG,IAAnB,CAAyB,KAAK,CAAC,MAA/B,CAAsC,OAAO,CAAED,WAA/C,oBALF,GADF,CASD,CAEDN,QAAQ,CAACQ,MAAT,cACE,KAAC,KAAD,CAAO,UAAP,wBACE,KAAC,GAAD,IADF,EADF,CAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,EAMAV,QAAQ,CAACQ,MAAT,cACE,KAAC,MAAD,IADF,CAEAC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAFA,EAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E,CAGA;AACA;AACA;AACAR,eAAe","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n/*\nclass MyMenu2 extends React.Component {\n  constructor() {\n      this.addActiveClass= this.addActiveClass.bind(this);\n      this.state = {\n          active: false,\n      };\n  }\n  toggleClass() {\n      const currentState = this.state.active;\n      this.setState({ active: !currentState });\n  };\n\n  render() {\n      return (\n        <div className={this.state.active ? 'topnav':'topnav responsive'}>\n          <a href=\"#home\" class=\"active\">Home</a>\n          <a href=\"#publications\">Publications</a>\n          <a href=\"#CV\">CV</a>\n          <a href=\"#\" style={test} class=\"icon\" onClick={this.toggleClass}>&#9776;</a>\n        </div>\n      )\n  }\n}\n*/\n\nfunction MyMenu() {\n  const [isActive, setActive] = useState(false);\n\n  const toggleClass = () => {\n    setActive(!isActive);\n  };\n\n  return (\n    <div \n      className={isActive ? 'topnav responsive':'topnav'} \n    > <a href=\"#home\" class=\"active\">Home</a>\n      <a href=\"#publications\">Publications</a>\n      <a href=\"#CV\">CV</a>\n      <a href=\"#\" style={test} class=\"icon\" onClick={toggleClass} >&#9776;</a>\n    </div>\n   );\n}  \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nReactDOM.render(\n  <MyMenu />,\ndocument.getElementById('mynav')\n);\n\n/*\nconst aboutSection = (\n  <h2>About</h2>\n);\n\n\nReactDOM.render(aboutSection, document.getElementsByClassName('section')[0]);\n*/\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}